name: Move to "En Progreso" on Assignment

on:
  issues:
    types: [assigned]

jobs:
  move-to-in-progress:
    runs-on: ubuntu-latest

    steps:
    - name: Move item to "En Progreso"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Define el ID del proyecto y la columna destino
        PROJECT_ID="PVT_kwHOCProrc4At2B_" # ID del proyecto identificado
        COLUMN_NAME="En Progreso"        # Nombre exacto de la columna destino

        # Obtén el ID del issue
        ISSUE_ID=${{ github.event.issue.node_id }}

        # Consulta el ID del ítem en el proyecto
        ITEM_ID=$(curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"query":"query { node(id: \\\"'"$PROJECT_ID"'\\\") { ... on ProjectV2 { items(first: 100) { nodes { id content { ... on Issue { id } } } } } } }"}' \
          https://api.github.com/graphql | jq -r ".data.node.items.nodes[] | select(.content.id == \\\"$ISSUE_ID\\\") | .id")

        if [ -z "$ITEM_ID" ]; then
          echo "No se encontró el ítem asociado al issue #${{ github.event.issue.number }} en el proyecto."
          exit 1
        fi

        # Consulta el ID de la columna "En Progreso"
        COLUMN_ID=$(curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"query":"query { node(id: \\\"'"$PROJECT_ID"'\\\") { ... on ProjectV2 { columns(first: 10) { nodes { id name } } } } }"}' \
          https://api.github.com/graphql | jq -r ".data.node.columns.nodes[] | select(.name == \\\"$COLUMN_NAME\\\") | .id")

        if [ -z "$COLUMN_ID" ]; then
          echo "No se encontró la columna '$COLUMN_NAME' en el proyecto."
          exit 1
        fi

        # Mueve el ítem a la columna "En Progreso"
        curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"query":"mutation { moveProjectV2Item(input: { projectId: \\\"'"$PROJECT_ID"'\\\", itemId: \\\"'"$ITEM_ID"'\\\", targetColumnId: \\\"'"$COLUMN_ID"'\\\", position: TOP }) { clientMutationId } }"}' \
          https://api.github.com/graphql

        echo "El ítem se movió a la columna '$COLUMN_NAME'."
