name: Move to "En Progreso" on Assignment

on:
  issues:
    types: [assigned]

jobs:
  move-to-in-progress:
    runs-on: ubuntu-latest

    steps:
    - name: Move item to "En Progreso"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Define el ID del proyecto y el nombre de la columna
        PROJECT_ID="PVT_kwHOCProrc4At2B_" # ID del proyecto identificado
        COLUMN_NAME="En Progreso"        # Nombre exacto de la columna

        # Obtén el ID del issue
        ISSUE_ID=${{ github.event.issue.node_id }}

        # Consulta el ID del ítem en el proyecto
        echo "Consultando ITEM_ID..."
        ITEM_RESPONSE=$(curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"query":"query { node(id: \\\"'"$PROJECT_ID"'\\\") { ... on ProjectV2 { items(first: 100) { nodes { id content { ... on Issue { id } } } } } } }"}' \
          https://api.github.com/graphql)
        echo "Respuesta del ITEM_ID: $ITEM_RESPONSE"

        ITEM_ID=$(echo "$ITEM_RESPONSE" | jq -r ".data.node.items.nodes[] | select(.content.id == \\\"$ISSUE_ID\\\") | .id")

        if [ -z "$ITEM_ID" ]; then
          echo "No se encontró el ítem asociado al issue #${{ github.event.issue.number }} en el proyecto."
          exit 1
        fi

        # Obtén el ID del campo de estado
        echo "Consultando FIELD_ID..."
        FIELD_RESPONSE=$(curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"query":"query { node(id: \\\"'"$PROJECT_ID"'\\\") { ... on ProjectV2 { fields(first: 20) { nodes { id name } } } } }"}' \
          https://api.github.com/graphql)
        echo "Respuesta del FIELD_ID: $FIELD_RESPONSE"

        FIELD_ID=$(echo "$FIELD_RESPONSE" | jq -r ".data.node.fields.nodes[] | select(.name == \\\"Status\\\") | .id")

        if [ -z "$FIELD_ID" ]; then
          echo "No se encontró el campo 'Status' en el proyecto."
          exit 1
        fi

        # Obtén el ID de la opción "En Progreso"
        echo "Consultando OPTION_ID..."
        OPTION_RESPONSE=$(curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"query":"query { node(id: \\\"'"$FIELD_ID"'\\\") { ... on ProjectV2SingleSelectField { options { id name } } } }"}' \
          https://api.github.com/graphql)
        echo "Respuesta del OPTION_ID: $OPTION_RESPONSE"

        OPTION_ID=$(echo "$OPTION_RESPONSE" | jq -r ".data.node.options[] | select(.name == \\\"$COLUMN_NAME\\\") | .id")

        if [ -z "$OPTION_ID" ]; then
          echo "No se encontró la opción '$COLUMN_NAME' en el campo 'Status'."
          exit 1
        fi

        # Actualiza el estado del ítem
        echo "Actualizando estado del ítem..."
        UPDATE_RESPONSE=$(curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"query":"mutation { updateProjectV2ItemFieldValue(input: { projectId: \\\"'"$PROJECT_ID"'\\\", itemId: \\\"'"$ITEM_ID"'\\\", fieldId: \\\"'"$FIELD_ID"'\\\", value: { singleSelectOptionId: \\\"'"$OPTION_ID"'\\\" } }) { clientMutationId } }"}' \
          https://api.github.com/graphql)
        echo "Respuesta de la actualización: $UPDATE_RESPONSE"

        echo "El ítem se movió a la columna '$COLUMN_NAME'."
